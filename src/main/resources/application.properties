server.port = 8091
#Default password that unadopted agents will use
#After adoption the controller will assign the agent an new user and password (auto generated)
agent.defaultPassword=kuracnamotociklu
#Enable periodic checks to the expiration of certificates,
# NOTE: THIS NEEDS TO BE SET TO TRUE IN ORDER FOR AUTO RENEW TO WORK
controller.expiration.check=true
#How many days before the expiration of the certificate will the application start sending email warnings/or automatically renew it if possible
#Have this parameter at mind when generating certificates, if you create a certificate that has a validity period less than this variable the application will renew it at every check
controller.expiration.check.warn.period=30
#How often the controller does a expiration check, cron
controller.expiration.check.period=0 0/1 * ? * *

#Enable or disable mail alerts
controller.mail.alert=false
#Enable or disable mail alerts for modification on keystores
controller.mail.modification.alert=false
#Enable or disable mail alerts for certificates that will expire soon or have already expired
controller.mail.expiration.alert=false
#In order to prevent mail spamming of expired certificates, you can select on what days you will be notified
# Ex:
# WIP, no effect at the moment
controller.mail.expiration.alert.period=
#When new certificates are added/read to the controller it will automatically check if the CA Vault contains their signer and assign it
controller.auto.assign.ca=true
#Dependent on the parameter above, by default it will not set the state to auto managed, setting this parameter to true will make it auto managed too
controller.auto.assign.managed=true
#This will ID unique certificates (ex. two certificates can be in 2 or more different keystore with different aliases and they will be considered
controller.auto.id.x509=true

#Entries in the database will be encrypted with this key. DO NOT CHANGE AFTER FIRST START!
#WIP no affect at the moment
controller.database.encryptionkey=password
#Mail server properties
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=adrian.perkovic71@gmail.com
spring.mail.password=
# Other properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=true

# SSL, post 465
#spring.mail.properties.mail.smtp.socketFactory.port = 465
#spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory